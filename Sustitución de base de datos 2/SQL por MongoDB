importar  colecciones
de  bsón . py3compat  importar  b
importar  pymongo

desde  pymongo  importar  MongoClient

clúster  =  MongoClient (
    "mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000L" )
db  =  clúster [ "MongoDB" ]
colección  =  db [ "Diccionario" ]


def  VerificarPalabra ( Palabra ):
    verificar  =  colección . encontrar_uno (
        { "palabra" : Palabra })
    si ( verificar  ==  Ninguno ):
        volver  falso
    más :
        volver  verdadero


def  Actualizar ( AntiguaPalabra , NuevaPalabra , NuevaDefinicion ):
    colección _ update_one ({ "palabra" : AntiguaPalabra }, { "$set" : {
        "palabra" : NuevaPalabra ,
        "definicion" : NuevaDefinicion
    }})


def  Borrar ( Palabra ):
    colección _ delete_one ({ "palabra" : Palabra })


def  Mostrar ():
    palabras  =  colección . encontrar ()
    yo  =  0
    print ( " \n **** Lista de palabras **** \n " )
    por  fila  en  palabras :
        yo  +=  1
        imprimir (
            f' { yo } . Palabra: { fila [ "palabra" ] } ' )


mientras que  es cierto :

    # Menú de opciones
    print ( " \n ***Dicionario de palabras de slang panameño*** \n " )

    Opcion  =  int ( input ( " 1). Agregar nueva palabra \n 2). Editar palabra \n 3). Eliminar palabra \n 4). Ver listado de palabras \n 5). Saber significado de palabra \n 0). Salir \n " ))

    si ( Opción  ==  1 ):
       # Se introduce palabra y definición
        AgregarPalabra  =  input ( " \n Ingrese palabra a agregar: \n " )
        Definición  =  entrada ( " \n Ingrese definición: \n " )
        if ( len ( AgregarPalabra ) y  len ( Definición )):

            if ( VerificarPalabra ( AgregarPalabra )):
                print ( " \n Esta palabra ya existe ¡por favor! Agrega otra palabra" )
            más :
                colección _ insertar_uno ({
                    "palabra" : AgregarPalabra ,
                    "definicion" : definicion
                })
        más :
            print ( " \n Por favor llene ambos campos de informacion" )

    elif ( Opción  ==  2 ):
        AgregarPalabra  =  input ( " \n Ingrese la palabra que desea modificar: \n " )

        NewWord  =  input ( " \n Ingrese el nuevo valor de esta palabra: \n " )

        NewDefinition  =  input ( " \n Ingrese la nueva definición de la palabra: \n " )

        if ( len ( NewWord ) and  len ( NewDefinition ) and  len ( AgregarPalabra )):
            if ( VerificarPalabra ( AgregarPalabra )):
                Actualizar ( AgregarPalabra , NewWord , NewDefinition )
            más :
                print ( " \n La palabra no existe!, vuelva a intentarlo" )

        más :
            print ( " \n Por favor llene los campos de informacion" )

    elif ( Opción  ==  3 ):
        AgregarPalabra  =  input ( " \n Ingrese la palabra que desea eliminar \n " )

        if ( len ( AgregarPalabra )):
            if ( VerificarPalabra ( AgregarPalabra )):
                Borrar ( AgregarPalabra )

            más :
                print ( " \ nLa palabra no existe!" )

        más :
            print ( " \n Por favor llene los campos de informacion" )

    elif ( Opción  ==  4 ):
        Mostrar ()
    elif ( Opción  ==  5 ):
        AgregarPalabra  =  input ( " \n Ingrese la palabra que desea ver su significado \n " )
        if ( len ( AgregarPalabra )):
            if ( VerificarPalabra ( AgregarPalabra )):
                getPalabra  =  colección . find_one ({ "palabra" : AgregarPalabra })
                print ( f' \n La definicion es: { getPalabra [ "definicion" ] } ' )
            más :
                print ( " \ nLa palabra no existe!" )

        más :
            print ( " \n Por favor llene los campos de informacion" )

    elif ( Opción  ==  0 ):
        romper

    más :
        print ( " \n Ingrese una opcion valida \n " )  
